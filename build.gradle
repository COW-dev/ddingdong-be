plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.6'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
    id "org.sonarqube" version "5.1.0.4882"
}

group = 'ddingdong'
version = '0.0.1-SNAPSHOT'

java {
}

jar {
    enabled = false
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    //develop
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //db
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.mysql:mysql-connector-j'
    implementation 'org.flywaydb:flyway-core'
    implementation "org.flywaydb:flyway-mysql"

    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //etc(기타)
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.4.4'
    implementation 'org.apache.poi:poi:5.2.0'
    implementation 'org.apache.poi:poi-ooxml:5.2.0'
    implementation 'io.sentry:sentry-logback:7.6.0'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.github.f4b6a3:uuid-creator:6.0.0'
    implementation 'software.amazon.awssdk:ses:2.24.0'
    implementation 'com.google.guava:guava:32.1.3-jre'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'com.auth0:java-jwt:4.2.1'

    // Monitoring
    implementation 'io.sentry:sentry-spring-boot-starter-jakarta:7.14.0'
    implementation 'io.sentry:sentry-logback:7.14.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testRuntimeOnly "org.junit.platform:junit-platform-launcher"
    testImplementation("com.navercorp.fixturemonkey:fixture-monkey-starter:1.0.23")

    // TestContainer
    testImplementation 'org.testcontainers:testcontainers:1.20.1'
    testImplementation 'org.testcontainers:junit-jupiter:1.20.1'

    // mysql 컨테이너
    testImplementation 'org.testcontainers:mysql:1.20.1'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

sonar {
    properties {
        property "sonar.projectKey", "COW-dev_ddingdong-be"
        property "sonar.organization", "cow-dev"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.java.source", "${java.sourceCompatibility}"
        property "sonar.coverage.jacoco.xmlReportPaths", "${layout.buildDirectory}/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.junit.reportPaths", "${layout.buildDirectory}/test-results/test"

        property "sonar.exclusions", "**/common/**"
        property "sonar.coverage.exclusions", """
            **/common/**,
            **/controller/**,
            **/dto/**,
            **/service/General*.java
        """
    }
}

jacocoTestReport {
    dependsOn test
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/common/**",
                    "**/controller/**",
                    "**/dto/**",
                    "**/service/General*.class"
            ])
        }))
    }
    reports {
        html.required = true
        xml.required = true
        csv.required = false
    }
}
