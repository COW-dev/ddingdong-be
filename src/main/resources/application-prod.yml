spring:
  config:
    activate:
      on-profile: prod

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
      # HikariCP 메트릭 활성화
      register-mbeans: true
      pool-name: "HikariPool-Main"

  jpa:
    database: mysql
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
    defer-datasource-initialization: false
    open-in-view: true

  sql:
    init:
      mode: never

  security:
    user:
      name: ${MONITORING_USERNAME}
      password: ${MONITORING_USER_PASSWORD}

jwt:
  header: "Authorization"
  prefix: "Bearer"
  issuer: "ddingdong"
  secret: ${JWT_SECRET}
  expiration: 36000

logging:
  config: classpath:logback-${spring.profiles.active}.xml

sentry:
  dsn: ${SENTRY_DSN}
  environment: prod

server:
  tomcat:
    mbeanregistry:
      enabled: true
  port: 8080

# Actuator 메트릭 설정
management:
  observations:
    enable:
      spring:
        security: false
  endpoints:
    web:
      exposure:
        # 최소한 필요한 엔드포인트만
        include: info, health,metrics,prometheus
      base-path: ${ACTUATOR_BASE_PATH}
    jmx:
      exposure:
        exclude: "*"
  server:
    port: 9090

  endpoint:
    prometheus:
      enabled: true

  metrics:
    # 필요한 메트릭만 활성화
    enable:
      process: true
      hikaricp: true    # 데이터베이스 연결 풀
      jvm: true         # JVM 메모리, GC, 스레드
      system: true      # 시스템 메트릭 (일부)
      web: true         # HTTP 요청 메트릭
      spring:
        security:
          filter chains: false

    # HTTP 응답시간 히스토그램
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99

    # 공통 라벨
    tags:
      application: "띵동 운영"
      server: "운영서버"

  prometheus:
    metrics:
      export:
        enabled: true
